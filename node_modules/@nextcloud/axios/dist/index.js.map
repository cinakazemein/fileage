{"version":3,"sources":["../lib/index.ts"],"names":["client","Axios","create","headers","requesttoken","cancelableClient","Object","assign","CancelToken","isCancel","token","defaults"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;;;AAOA,IAAMA,MAAW,GAAGC,eAAMC,MAAN,CAAa;AAChCC,EAAAA,OAAO,EAAE;AACRC,IAAAA,YAAY,sBAAE,4BAAF,+DAAuB;AAD3B;AADuB,CAAb,CAApB;;AAKA,IAAMC,gBAAyC,GAAGC,MAAM,CAACC,MAAP,CAAcP,MAAd,EAAsB;AACvEQ,EAAAA,WAAW,EAAEP,eAAMO,WADoD;AAEvEC,EAAAA,QAAQ,EAAER,eAAMQ;AAFuD,CAAtB,CAAlD;AAKA,gCAAqB,UAAAC,KAAK;AAAA,SAAIV,MAAM,CAACW,QAAP,CAAgBR,OAAhB,CAAwBC,YAAxB,GAAuCM,KAA3C;AAAA,CAA1B;eAEeL,gB","sourcesContent":["import Axios, { AxiosInstance, CancelTokenStatic } from 'axios'\nimport { getRequestToken, onRequestTokenUpdate } from '@nextcloud/auth'\n\ninterface CancelableAxiosInstance extends AxiosInstance {\n\tCancelToken: CancelTokenStatic\n\tisCancel(value: any): boolean\n}\n\nconst client: any = Axios.create({\n\theaders: {\n\t\trequesttoken: getRequestToken() ?? ''\n\t}\n})\nconst cancelableClient: CancelableAxiosInstance = Object.assign(client, {\n\tCancelToken: Axios.CancelToken,\n\tisCancel: Axios.isCancel,\n})\n\nonRequestTokenUpdate(token => client.defaults.headers.requesttoken = token)\n\nexport default cancelableClient\n"],"file":"index.js"}